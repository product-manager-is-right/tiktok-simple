// Code generated by hertz generator.

package handler

import (
	"TIKTOK_Video/model/vo"
	"TIKTOK_Video/mw"
	"TIKTOK_Video/service/ServiceImpl"
	"context"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	"log"
	"net/http"
	"strconv"
	"time"
)

const (
	ResponseSuccess = 0
	ResponseFail    = 1
)

/*
视频流接口
*/

func Feed(ctx context.Context, c *app.RequestContext) {
	var Id int64
	var err error

	queryTime := c.Query("latest_time")

	// TODO : 通过token获取user，需要jwt支持
	if user, exist := c.Get(mw.IdentityKey); exist {
		Id = user.(mw.User).Id
	} else {
		Id = vo.DemoUser.Id
	}

	var latestTime int64
	if queryTime != "0" {
		latestTime, err = strconv.ParseInt(queryTime, 10, 64)
	} else {
		latestTime = time.Now().Unix()
	}
	if err != nil {
		c.JSON(http.StatusOK, vo.Response{
			StatusCode: ResponseFail,
			StatusMsg:  "时间戳请求错误",
		})
		return
	}
	vsi := ServiceImpl.VideoServiceImpl{}
	videoInfoList, nextTime, err := vsi.GetVideoInfosByLatestTime(latestTime, Id)
	log.Print(videoInfoList[0].Title)
	if err != nil {
		c.JSON(http.StatusOK, vo.Response{
			StatusCode: ResponseFail,
			StatusMsg:  "获取视频流失败：" + err.Error(),
		})
		return
	}

	c.JSON(consts.StatusOK, vo.FeedResponse{
		Response:  vo.Response{StatusCode: ResponseSuccess},
		VideoList: videoInfoList,
		NextTime:  nextTime,
	})
}

/*
	评论操作接口
*/
