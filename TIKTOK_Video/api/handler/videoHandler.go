// Code generated by hertz generator.

package handler

import (
	"TIKTOK_Video/model/vo"
	"TIKTOK_Video/service/ServiceImpl"
	"context"
	"net/http"
	"strconv"
	"time"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

const (
	ResponseSuccess = 0
	ResponseFail    = 1
)

/*
视频流接口
*/

func Feed(ctx context.Context, c *app.RequestContext) {
	queryTime := c.Query("latest_time")
	// TODO : 通过token获取user，需要jwt支持
	userId, _ := c.Get("user")

	var err error
	var latestTime int64
	if queryTime == "" {
		latestTime = time.Now().Unix()
	}
	latestTime, err = strconv.ParseInt(queryTime, 10, 64)
	if err != nil {
		c.JSON(http.StatusOK, vo.Response{
			StatusCode: ResponseFail,
			StatusMsg:  "时间戳请求错误",
		})
	}

	vsi := ServiceImpl.VideoServiceImpl{}
	videoInfoList, nextTime, err := vsi.GetVideoInfosByLatestTime(latestTime, userId.(int64))
	if err != nil {
		c.JSON(http.StatusOK, vo.Response{
			StatusCode: ResponseFail,
			StatusMsg:  "获取视频流失败：" + err.Error(),
		})
		return
	}

	c.JSON(consts.StatusOK, vo.FeedResponse{
		Response:  vo.Response{StatusCode: ResponseSuccess},
		VideoList: videoInfoList,
		NextTime:  nextTime,
	})
}

/*
	评论操作接口
*/
